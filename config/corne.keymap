/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

&mmv {
  acceleration-exponent = <2>;
  time-to-max-speed-ms = <200>;
  delay-ms = <0>;
};

&msc {
  acceleration-exponent = <1>;
  time-to-max-speed-ms = <300>;
  delay-ms = <30>;
};

&mt {
  tapping-term-ms = <150>;
  flavor = "tap-preferred";
  retro-tap;
};

&sk {
    release-after-ms = <2000>;
    quick-release;
};
&lt {
    compatible = "zmk,behavior-hold-tap";
    #binding-cells = <2>;
    tapping-term-ms = <150>;
    retro-tap;
};

/ {

        behaviors {
            /* Home-row mod behavior */
            hrm: hrm {
              compatible = "zmk,behavior-hold-tap";
              label = "HRM";
              #binding-cells = <2>;           // <hold_mod tap_key>
              flavor = "hold-preferred";
              tapping-term-ms = <200>;
              quick-tap-ms = <120>;
              retro-tap;
              bindings = <&kp &kp>;           // hold uses &kp (for the mod), tap uses &kp (for the letter)
            };
        
            /* Fast LT for thumbs */
            lt_fast: lt_fast {
              compatible = "zmk,behavior-hold-tap";
              label = "LT_FAST";
              #binding-cells = <2>;           // <layer tap_key>
              flavor = "tap-preferred";
              tapping-term-ms = <130>;
              quick-tap-ms = <120>;
              retro-tap;
              bindings = <&kp &kp>;
            };
          };
        conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
          };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// ----------------------------------------------------------------------------------------
// | past |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | undo |
// | copy | sA  |  cS |  aD |  gF |  G  |   |  H  |  gJ  | aK  |  cL |  s; |  '   |
// | cut  |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | caps |
//                    | ESC | 1SPC | TAB  |   | BSPC |  2ENT  | DEL |              
                        bindings = <                                          
   &kp LG(V) &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I  &kp O   &kp P    &kp LG(Z)
   &kp LG(C) &hrm LSHFT A &hrm LCTRL S &hrm LALT D &hrm LGUI F &kp G   &kp H &hrm RGUI J  &hrm RALT K  &hrm RCTRL L   &hrm RSHFT SEMI  &kp SQT
   &kp LG(X) &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &caps_word
                  &kp ESC  &lt_fast 1 SPACE &kp TAB    &kp BSPC &lt_fast 2 RET &kp DEL
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
// |      |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  |      |
// |      |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
// |      |     |     |     |     |     |   | HOME| PGDN| PGUP|  END|     |      |
//                    |     |     |     |   |  cb |     |  cd  |
                        bindings = <
   &trans   &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &trans
   &trans &trans &trans   &trans   &trans  &trans  &kp LEFT   &kp DOWN    &kp UP      &kp RIGHT &trans &trans
   &trans &trans &trans  &trans   &trans   &trans  &kp HOME   &kp PG_DN   &kp PG_UP   &kp END &trans &trans
                                    &trans     &trans       &trans      &kp LC(BSPC)  &trans   &kp LC(DEL)
                        >;
                };

                  raise_layer {
// -----------------------------------------------------------------------------------------
// |      |  .  |  $  |  `  |  -  |  /  |   |  *  |  #  |  [  |  ]  |  ,  |      |
// |  <   |  %  |  &  |  "  |  ~  | "|" |   |  !  |  =  |  (  |  )  |  ^  |  >   |
// |      |  :  |  ?  |  '  |  _  |  \  |   |  @  |  +  |  {  |  }  |  ;  |      |
//                   |LSHFT |     |LCRTL|   |LALT  |      |      |
// -----------------------------------------------------------------------------------------
    bindings = <
  &trans   &kp DOT    &kp DLLR   &kp GRAVE   &kp MINUS   &kp FSLH        &kp STAR   &kp HASH   &kp LEFT_BRACKET   &kp RIGHT_BRACKET   &kp COMMA   &trans
  &kp LT   &kp PRCNT  &kp AMPS    &kp DQT     &kp TILDE  &kp PIPE        &kp EXCL   &kp EQUAL  &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp CARET &kp GT
  &trans   &kp COLON  &kp QMARK  &kp SQT     &kp UNDERSCORE &kp BSLH      &kp AT     &kp PLUS   &kp LEFT_BRACE     &kp RIGHT_BRACE     &kp SEMI   &trans

           &sk LSHFT &trans &sk LCTRL        &sk LALT  &trans &trans
    >;
};

                tri_layer {
// -----------------------------------------------------------------------------------------
// | F1   | F2  | F3  | F4  | F5  | F6  |   | F7  | F8  | F9  | F10 | F11 |  F12 |
// | brup |     |     |     |     |     |   |scup | mlc | mup | mrc |vup  | mute |
// | brdn | BT1 | BT2 | BT3 | BT4 | BT5 |   |scdn | mle | mdn | mrt | vdn | prscn|
//                    | btclr |     |     |   |     |     |     |
                        bindings = <
   &kp F1   &kp F2 &kp F3   &kp F4   &kp F5                                 &kp F6   &kp F7 &kp F8   &kp F9   &kp F10 &kp F11 &kp F12
   &kp C_BRI_UP &trans  &trans &trans   &trans  &trans                             &msc MOVE_UP &trans &mkp LCLK MOVE_UP &mkp RCLK  &kp C_VOL_UP   &kp C_MUTE
   &kp C_BRI_DN &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4    &msc MOVE_DOWN &mmv MOVE_LEFT &mmv MOVE_DOWN  &mmv MOVE_RIGHT    &kp C_VOL_DN  &kp PSCRN
                             &bt BT_CLR &trans   &trans   &trans   &trans    &trans
                        >;
                };
        };
};





